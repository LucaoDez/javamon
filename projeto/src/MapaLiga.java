import java.util.Scanner;

public class MapaLiga {

    // üó∫Ô∏è Mapa da Ilha da Liga Javamon
    // '#': parede
    // 'F', 'T', 'A', 'R': portas dos gin√°sios
    // 'C': Campe√£o (s√≥ acessa ap√≥s 4 vit√≥rias)
    // 'S': Sa√≠da do Hall (volta para a cidade)
    private char[][] mapa = {
        "#########################".toCharArray(),
        "#       F       T       #".toCharArray(),
        "#########       #########".toCharArray(),
        "#                      C#".toCharArray(),
        "#########       #########".toCharArray(),
        "#       A   S   R       #".toCharArray(), // ‚úÖ SA√çDA adicionada no centro
        "#########################".toCharArray(),
    };

    // üßç Posi√ß√£o inicial do jogador (sobre o 'S')
    private int x = 12, y = 5;

    private Jogador jogador;

    public MapaLiga(Jogador jogador) {
        this.jogador = jogador;
    }

    public void entrar() {
        System.out.println("\nüî• Bem-vindo √† Ilha da Liga Javamon!");

        Scanner in = new Scanner(System.in);

        while (true) {
            mostrar();
            System.out.print("Movimente-se (WASD): ");
            String line = in.nextLine();
            if (line == null || line.trim().isEmpty()) continue;
            char m = Character.toLowerCase(line.trim().charAt(0));
            mover(m);
        }
    }

    // üëÄ Exibir o mapa com o jogador como '@'
    private void mostrar() {
        for (int i = 0; i < mapa.length; i++) {
            for (int j = 0; j < mapa[i].length; j++) {
                if (i == y && j == x) System.out.print("@");
                else System.out.print(mapa[i][j]);
            }
            System.out.println();
        }
    }

    // ‚û°Ô∏è Movimenta√ß√£o e l√≥gica das portas
    private void mover(char d) {
        int nx = x, ny = y;

        if (d == 'w') ny--;
        else if (d == 's') ny++;
        else if (d == 'a') nx--;
        else if (d == 'd') nx++;
        else return;

        if (!dentro(nx, ny)) return;

        // Se for parede, n√£o anda
        if (mapa[ny][nx] == '#') return;

        char destino = mapa[ny][nx];

        // üåã Gin√°sio do Fogo
        if (destino == 'F') {
            new MapaGinasioFogo(jogador).entrar();
            return;
        }

        // üåä Gin√°sio da √Ågua
        if (destino == 'A') {
            new MapaGinasioAgua(jogador).entrar();
            return;
        }

        // üå± Gin√°sio da Terra
        if (destino == 'T') {
            new MapaGinasioTerra(jogador).entrar();
            return;
        }

        // üå™Ô∏è Gin√°sio do Ar
        if (destino == 'R') {
            new MapaGinasioAr(jogador).entrar();
            return;
        }

        // üèÜ Campe√£o ‚Äî s√≥ ap√≥s 4 vit√≥rias
        if (destino == 'C') {
            if (jogador.getVitoriasGym() == 4) {
                new MapaCampeao(jogador).entrar();
            } else {
                System.out.println("\n‚ùå Voc√™ precisa derrotar os 4 l√≠deres primeiro!");
            }
            return;
        }

        // üö™ SA√çDA do Hall
        if (destino == 'S') {
            System.out.println("\n‚Ü©Ô∏è Voc√™ saiu do Hall!");
            new Mapa ().entrar(jogador); // ‚úÖ volta para a cidade
            return;
        }

        // ‚úÖ Se n√£o for porta, apenas anda
        x = nx;
        y = ny;
    }

    private boolean dentro(int nx, int ny) {
        return ny >= 0 && ny < mapa.length && nx >= 0 && nx < mapa[ny].length;
    }
}